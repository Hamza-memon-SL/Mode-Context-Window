// <auto-generated />
using System;
using GenAiPoc.Contracts.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenAiPoc.Api.Migrations
{
    [DbContext(typeof(DbContextGenAiPOC))]
    [Migration("20250207123641_addTemplateIndexing")]
    partial class addTemplateIndexing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenAiPoc.Contracts.Models.AIModel", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InputTokenPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("OutputTokenPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("ModelId");

                    b.ToTable("AIModel", (string)null);
                });

            modelBuilder.Entity("GenAiPoc.Contracts.Models.CodeBuddyFileDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActualInputTokens")
                        .HasColumnType("int");

                    b.Property<int?>("ActualOutputTokens")
                        .HasColumnType("int");

                    b.Property<int?>("AssumedInputTokens")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileChecksum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("FullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IndexDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisualRepresentation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("CodeBuddyFileDetails", (string)null);
                });

            modelBuilder.Entity("GenAiPoc.Contracts.Models.CodeBuddyProjectSettings", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettingId"));

                    b.Property<string>("CloudPlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ExtensionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("SettingId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("CodeBuddyProjectSettings", (string)null);
                });

            modelBuilder.Entity("GenAiPoc.Contracts.Models.CodeBuddyProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActualInputTokens")
                        .HasColumnType("int");

                    b.Property<int?>("ActualOutputTokens")
                        .HasColumnType("int");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitHubURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IndexDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInMemory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectChecksum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisualRepresentation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CodeBuddyProjects", (string)null);
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.AboutModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutModels");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGroup")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.BacklogBuddyProjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCrudAnalysis")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEpicProgressOverview")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFunctionalSize")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTestScenarios")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUseCaseModel")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUserStoryHealth")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BacklogBuddyProjects");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.BoilerPlatesTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BoilerPlatesTemplates");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.ChatFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChatHistoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeedbackType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatFeedbacks");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.ChatHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChatSessionId")
                        .HasColumnType("int");

                    b.Property<int?>("ChatType")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HistoryChatType")
                        .HasColumnType("int");

                    b.Property<string>("IntentCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntentProgramming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PromptId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkspaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChatHistory");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.ChatPrompts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PromptText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChatPrompts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            OrderId = 1,
                            PromptText = "Combine these files as one",
                            Question = "Combine these files as one"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            OrderId = 2,
                            PromptText = "Convert into Java",
                            Question = "Convert into Java"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            OrderId = 3,
                            PromptText = "Convert into Python",
                            Question = "Convert into Python"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            OrderId = 4,
                            PromptText = "Generate Documentation",
                            Question = "Generate Documentation"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            OrderId = 5,
                            PromptText = "Translate this code into TypeScript",
                            Question = "Translate this code into TypeScript"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            OrderId = 6,
                            PromptText = "Optimize the performance of this code",
                            Question = "Optimize the performance of this code"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            OrderId = 7,
                            PromptText = "Refactor the code for readability",
                            Question = "Refactor the code for readability"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            OrderId = 8,
                            PromptText = "Find bugs in this program",
                            Question = "Find bugs in this program"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            OrderId = 9,
                            PromptText = "Write unit tests for the following code",
                            Question = "Write unit tests for the following code"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            OrderId = 10,
                            PromptText = "Generate a summary for this dataset",
                            Question = "Generate a summary for this dataset"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            OrderId = 11,
                            PromptText = "Compare this algorithm with a better approach",
                            Question = "Compare this algorithm with a better approach"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            OrderId = 12,
                            PromptText = "Improve the error handling in this code",
                            Question = "Improve the error handling in this code"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            OrderId = 13,
                            PromptText = "Break down the logic in this code block",
                            Question = "Break down the logic in this code block"
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            OrderId = 14,
                            PromptText = "Update the syntax for the latest version",
                            Question = "Update the syntax for the latest version"
                        },
                        new
                        {
                            Id = 15,
                            IsActive = true,
                            OrderId = 15,
                            PromptText = "Generate a UML diagram from this code",
                            Question = "Generate a UML diagram from this code"
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            OrderId = 16,
                            PromptText = "What’s the time complexity of this function?",
                            Question = "What’s the time complexity of this function?"
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            OrderId = 17,
                            PromptText = "Make this code more secure",
                            Question = "Make this code more secure"
                        },
                        new
                        {
                            Id = 18,
                            IsActive = true,
                            OrderId = 18,
                            PromptText = "Add comments to explain this code",
                            Question = "Add comments to explain this code"
                        },
                        new
                        {
                            Id = 19,
                            IsActive = true,
                            OrderId = 19,
                            PromptText = "Can you simplify this logic?",
                            Question = "Can you simplify this logic?"
                        },
                        new
                        {
                            Id = 20,
                            IsActive = true,
                            OrderId = 20,
                            PromptText = "Generate a summary for this dataset",
                            Question = "Generate a summary for this dataset"
                        });
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.CodeBuddyPerformance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DifferenceTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HistoryChatType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RequestTimeT1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResponseTimeT2")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CodeBuddyPerformance");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.CodeBuddyProjectGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CodeBuddyProjectGroups");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.CodeBuddyProjectInvites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InviteToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CodeBuddyProjectInvites");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.CodeSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoryChatType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfLinesCoppied")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CodeSuggestions");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Configurations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmbiguousPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatIntentPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplexUserStoryTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JsonValidationRetryAttempt")
                        .HasColumnType("int");

                    b.Property<string>("NonConformancePrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectFileJsonPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectFileJsonTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectFileSummaryPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectFileSummaryTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanticPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SimpleUserStoryTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingleFileJsonPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingleFileJsonTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingleFileSummaryPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingleFileSummaryTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.CustomizationTimeSaved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstimatedTimeSavedDashboardFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedTimeSavedFormula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedTimeSavedFormulaValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedTimeSavedLabel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedTimeSavedVisibotFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CustomizationTimeSaved");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 2, 7, 12, 36, 40, 834, DateTimeKind.Utc).AddTicks(8964),
                            EstimatedTimeSavedDashboardFormat = "{dd} days, {hh} hours and {mm} minutes",
                            EstimatedTimeSavedFormula = "(Total Characters Copied/ Typing Speed) + (Total Characters Copied * Logic Time) + (Total Characters Copied * Testing Time)",
                            EstimatedTimeSavedFormulaValue = "({0}/40) + ({0} * 0.05) + ({0} * 0.04)",
                            EstimatedTimeSavedLabel = "(Total Characters Copied/40) + (Total Characters Copied * 0.05) + (Total Characters Copied * 0.04)",
                            EstimatedTimeSavedVisibotFormat = "{hh.mm} Hrs",
                            IsActive = true,
                            ModifiedDate = new DateTime(2025, 2, 7, 12, 36, 40, 834, DateTimeKind.Utc).AddTicks(8968)
                        });
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.DevopsUserStories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmbigiousScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmbigiousScoreSuggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardColumn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DevopsProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IterationPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LlmInteractionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LlmInteractionModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NonConformanceScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonConformanceSuggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanticScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanticSuggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StateChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeamProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserStoriesCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserStoriesId")
                        .HasColumnType("int");

                    b.Property<string>("WorkItemType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DevopsUserStories");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.DownloadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DownloadModels");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.ExtensionBuild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("MarkedAsLatest")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExtensionBuilds");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraAnalyticsTimeSaved", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CharactersCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SearchType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JiraAnalyticsTimeSaved");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraBaseAnalytics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SearchedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("newFetchIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updatedFetchIds")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JiraBaseAnalytics");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraSearchAnalytics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArtifactsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FrequencySearchCount")
                        .HasColumnType("int");

                    b.Property<string>("JiraProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JiraProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SearchType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStoriesStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JiraSearchAnalytics");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraSearchArtifactsAnalytics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArtifactSearchCount")
                        .HasColumnType("int");

                    b.Property<string>("ComponentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentArtifactId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("jiraAnalyticsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("jiraAnalyticsId");

                    b.ToTable("JiraSearchArtifactsAnalytics");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraSync", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JsonMapping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonMappingHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JiraSync");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraUserStories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmbigiousScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmbigiousScoreSuggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JiraProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JiraProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LlmInteractionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LlmInteractionModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NonConformanceScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonConformanceSuggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanticScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanticSuggestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserStoriesCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserStoriesId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStoriesStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserStoriesUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JiraUserStories");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.ModelVersionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModelVersionDetails");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreatedByAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateCategoryId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.TemplateCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemplateCategories");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.TemplateSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemplateSections");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.TemplateSubSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Prompt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateSectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateSectionId");

                    b.ToTable("TemplateSubSections");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.UserTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubSectionOrder")
                        .HasColumnType("int");

                    b.Property<int?>("TemplateId")
                        .HasColumnType("int");

                    b.Property<int?>("TemplateSubSectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.HasIndex("TemplateSubSectionId");

                    b.ToTable("UserTemplates");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.UserTemplateFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTemplateId");

                    b.ToTable("UserTemplateFrequencies");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.UserAuthentication", b =>
                {
                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DevopsBaseUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DevopsPAT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JiraBaseUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JiraPAT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserAuthentication");
                });

            modelBuilder.Entity("GenAiPoc.Contracts.Models.CodeBuddyFileDetails", b =>
                {
                    b.HasOne("GenAiPoc.Contracts.Models.CodeBuddyProjects", "Project")
                        .WithMany("Files")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("GenAiPoc.Contracts.Models.CodeBuddyProjectSettings", b =>
                {
                    b.HasOne("GenAiPoc.Contracts.Models.CodeBuddyProjects", "Project")
                        .WithOne("ProjectSettings")
                        .HasForeignKey("GenAiPoc.Contracts.Models.CodeBuddyProjectSettings", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraSearchArtifactsAnalytics", b =>
                {
                    b.HasOne("GenAiPoc.Core.Entities.JiraSearchAnalytics", "jiraAnalytics")
                        .WithMany("JiraComponentAnalytics")
                        .HasForeignKey("jiraAnalyticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jiraAnalytics");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.Template", b =>
                {
                    b.HasOne("GenAiPoc.Core.Entities.Templates.TemplateCategory", "TemplateCategory")
                        .WithMany()
                        .HasForeignKey("TemplateCategoryId");

                    b.Navigation("TemplateCategory");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.TemplateSubSection", b =>
                {
                    b.HasOne("GenAiPoc.Core.Entities.Templates.TemplateSection", null)
                        .WithMany("TemplateSubSections")
                        .HasForeignKey("TemplateSectionId");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.UserTemplate", b =>
                {
                    b.HasOne("GenAiPoc.Core.Entities.Templates.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId");

                    b.HasOne("GenAiPoc.Core.Entities.Templates.TemplateSubSection", "TemplateSubSection")
                        .WithMany()
                        .HasForeignKey("TemplateSubSectionId");

                    b.Navigation("Template");

                    b.Navigation("TemplateSubSection");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.UserTemplateFrequency", b =>
                {
                    b.HasOne("GenAiPoc.Core.Entities.Templates.UserTemplate", "UserTemplate")
                        .WithMany("UserTemplateFrequencies")
                        .HasForeignKey("UserTemplateId");

                    b.Navigation("UserTemplate");
                });

            modelBuilder.Entity("GenAiPoc.Contracts.Models.CodeBuddyProjects", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("ProjectSettings");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.JiraSearchAnalytics", b =>
                {
                    b.Navigation("JiraComponentAnalytics");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.TemplateSection", b =>
                {
                    b.Navigation("TemplateSubSections");
                });

            modelBuilder.Entity("GenAiPoc.Core.Entities.Templates.UserTemplate", b =>
                {
                    b.Navigation("UserTemplateFrequencies");
                });
#pragma warning restore 612, 618
        }
    }
}
